def imageName = "${JOB_NAME}${env.BUILD_NUMBER}"

node {
    notifyBuild('STARTED')

    checkout scm

    withCredentials([string(credentialsId: 'longhorn-tests-do-token', variable: 'TF_VAR_do_token')]) {
        stage('build') {
            sh "test_framework/scripts/build.sh"
            sh "docker run -itd --name ${JOB_NAME}${BUILD_NUMBER} --env LONGHORN_UPGRADE_TEST=${LONGHORN_UPGRADE_TEST} --env TF_VAR_do_token=${env.TF_VAR_do_token} --env TF_VAR_tf_workspace=${TF_VAR_tf_workspace} ${imageName}"
        }

        try {
            stage ('terraform') {
                sh  " docker exec ${JOB_NAME}${BUILD_NUMBER} ${TF_VAR_tf_workspace}/scripts/terraform-setup.sh"
            }

            stage ('rke') {
                sh  " docker exec ${JOB_NAME}${BUILD_NUMBER} ${TF_VAR_tf_workspace}/scripts/rke-setup.sh"
            }

            stage ('longhorn setup & tests') {
                sh  " docker exec ${JOB_NAME}${BUILD_NUMBER} ${TF_VAR_tf_workspace}/scripts/longhorn-setup.sh"
            }
            stage ('report generation') {
                sh "docker cp ${JOB_NAME}${BUILD_NUMBER}:${TF_VAR_tf_workspace}/longhorn-test-junit-report.xml ."
                junit 'longhorn-test-junit-report.xml'
            }
        } catch(e) {
            currentBuild.result = "FAILED"
            throw e
        } finally {
            stage('releasing resources') {
                sh  " docker exec ${JOB_NAME}${BUILD_NUMBER} ${TF_VAR_tf_workspace}/scripts/cleanup.sh"
                sh "docker stop ${JOB_NAME}${BUILD_NUMBER}"
                sh "docker rm -v ${JOB_NAME}${BUILD_NUMBER}"
                sh "docker rmi ${imageName}"

                notifyBuild(currentBuild.result)
            }
        }
    }
}


def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'CJ4GPBTLG',  teamDomain: 'rancher',  tokenCredentialId: 'longhorn-tests-slack-token')
}
