def imageName = "${JOB_BASE_NAME}${env.BUILD_NUMBER}"

node {
    notifyBuild('STARTED')

    checkout scm

    withCredentials([usernamePassword(credentialsId: 'AWS_CREDS', passwordVariable: 'AWS_SECRET_KEY', usernameVariable: 'AWS_ACCESS_KEY')]) {
        stage('build') {
            sh "secscan/scripts/build.sh"
            sh """docker run -itd \
                             --name ${JOB_BASE_NAME}${BUILD_NUMBER} \
                             --env TF_VAR_tf_workspace=${TF_VAR_tf_workspace} \
                             --env TF_VAR_severity=${TF_VAR_SEVERITY} \
                             --env TF_VAR_longhorn_version=${TF_VAR_LONGHORN_VERSION} \
                             --env TF_VAR_lh_aws_access_key=${AWS_ACCESS_KEY} \
                             --env TF_VAR_lh_aws_secret_key=${AWS_SECRET_KEY} \
                             ${imageName}
            """
        }

        try {
            stage ('scan images') {
                sh  " docker exec ${JOB_BASE_NAME}${BUILD_NUMBER} ${TF_VAR_tf_workspace}/scripts/terraform-setup.sh"
            }

            stage ('report generation') {
                sh "docker cp ${JOB_BASE_NAME}${BUILD_NUMBER}:${TF_VAR_tf_workspace}/junit-reports ."
                def summary = junit allowEmptyResults: true, testResults: "junit-reports/*.xml"
            }

        } catch(e) {
            currentBuild.result = "FAILED"
            throw e
        } finally {
            stage('releasing resources') {
                sh  " docker exec ${JOB_BASE_NAME}${BUILD_NUMBER} ${TF_VAR_tf_workspace}/scripts/cleanup.sh"
                sh "docker stop ${JOB_BASE_NAME}${BUILD_NUMBER}"
                sh "docker rm -v ${JOB_BASE_NAME}${BUILD_NUMBER}"
                sh "docker rmi ${imageName}"
                notifyBuild(currentBuild.result)
            }
        }
    }
}


def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_BASE_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
    // Send failed notifications
    slackSend (color: colorCode, message: summary,  tokenCredentialId: 'longhorn-tests-slack-token')
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, tokenCredentialId: 'longhorn-tests-slack-token')
}
