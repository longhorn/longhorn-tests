---
kind: pipeline
name: default-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: fetch
  image: alpine/git
  commands:
  - git fetch --tags

- name: "flake8 check"
  pull: default
  image: rancher/dapper:v0.5.3
  commands:
  - dapper
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: "publish longhorn-manager-test image"
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    custom_dns: 1.1.1.1
    context: manager/integration
    dockerfile: manager/integration/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-manager-test
    tag: "master-amd64"
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - push

- name: publish-tagged-image
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    custom_dns: 1.1.1.1
    context: manager/integration
    dockerfile: manager/integration/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-manager-test
    tag: "${DRONE_TAG}-amd64"
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - tag

volumes:
- name: socket
  host:
    path: /var/run/docker.sock
---
kind: pipeline
name: default-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: fetch
  image: arm64v8/alpine
  commands:
  - apk add git
  - git fetch --tags

- name: "flake8 check"
  pull: default
  image: rancher/dapper:v0.5.3
  commands:
  - dapper
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: "publish longhorn-manager-test image"
  image: plugins/docker
  settings:
    build_args:
    - ARCH=arm64
    custom_dns: 1.1.1.1
    context: manager/integration
    dockerfile: manager/integration/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-manager-test
    tag: "master-arm64"
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - push

- name: publish-tagged-image
  image: plugins/docker
  settings:
    build_args:
    - ARCH=arm64
    custom_dns: 1.1.1.1
    context: manager/integration
    dockerfile: manager/integration/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-manager-test
    tag: "${DRONE_TAG}-arm64"
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - tag

volumes:
- name: socket
  host:
    path: /var/run/docker.sock
---
kind: pipeline
name: manifest

platform:
  os: linux
  arch: amd64

steps:
- name: manifest-master
  image: plugins/manifest:1
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    platforms:
      - linux/amd64
      - linux/arm64
    target: "longhornio/longhorn-manager-test:master"
    template: "longhornio/longhorn-manager-test:master-ARCH"
  when:
    instance:
    - drone-publish.longhorn.io
    branch:
    - master
    event:
    - push

- name: manifest-tag
  image: plugins/manifest:1
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    platforms:
      - linux/amd64
      - linux/arm64
    target: "longhornio/longhorn-manager-test:${DRONE_TAG}"
    template: "longhornio/longhorn-manager-test:${DRONE_TAG}-ARCH"
  when:
    instance:
    - drone-publish.longhorn.io
    branch:
    - master
    event:
    - tag

depends_on:
- default-amd64
- default-arm64

---

kind: pipeline
name: build engine compitable image

platform:
  os: linux
  arch: amd64

steps:
    #- name: clone longhorn engine
    #  image: alpine/git
    #  commands:
    #  - git clone https://github.com/longhorn/longhorn-engine.git
    #  - cd longhorn-engine
    #  - git commit --allow-empty -m "add dummy commit"
    #
    #- name: build
    #  pull: default
    #  image: rancher/dapper:v0.5.3
    #  commands:
    #  - cd longhorn-engine
    #  - dapper package
    #  privileged: true
    #  volumes:
    #  - name: socket
    #    path: /var/run/docker.sock

- name: generate compitable image
  image: ubuntu:20.04
  commands:
  - apt-get update && apt-get install gettext-base
  - cd manager/test_containers/compatibility
  - ./drone_build_images.sh > .tags

- name: publish engine compitable image
  image: plugins/docker
  settings:
    custom_dns: 1.1.1.1
    auto_tag_suffix: "amd64"
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-test
    username:
      from_secret: docker_username


volumes:
- name: socket
  host:
    path: /var/run/docker.sock
