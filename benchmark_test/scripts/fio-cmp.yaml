apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kbench-pvc-1
spec:
  volumeMode: Filesystem
  #volumeMode: Block
  #storageClassName: longhorn  # replace with your storage class
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 55Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kbench-pvc-2
spec:
  volumeMode: Filesystem
  #volumeMode: Block
  storageClassName: longhorn  # replace with your storage class
  #storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 55Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kbench
spec:
  template:
    metadata:
      labels:
        kbench: fio
    spec:
      containers:
      - name: kbench
        image: yangchiu/kbench:latest
        imagePullPolicy: Always
        env:
        #- name: QUICK_MODE  # for debugging
        #  value: "1"
        - name: TEST_NAME
          value: test-device
        - name: FIRST_VOL_NAME
          value: Local-Path
        - name: FIRST_VOL_FILE
          value: "/volume1/test"
        - name: SECOND_VOL_NAME
          value: Longhorn
        - name: SECOND_VOL_FILE
          value: "/volume2/test"
        - name: SIZE
          value: "50G" # must be smaller or match the PVC size
        - name: CPU_IDLE_PROF
          value: "disabled" # must be "enabled" or "disabled"
        volumeMounts:
        - name: vol1
          mountPath: /volume1/
        - name: vol2
          mountPath: /volume2/
        command: ["bash", "/fio/cmp_run.sh"]
        #volumeDevices:
        #- name: vol1
        #  devicePath: /volume1/test
        #- name: vol2
        #  devicePath: /volume2/test
      restartPolicy: Never
      volumes:
      - name: vol1
        persistentVolumeClaim:
          claimName: kbench-pvc-1
      - name: vol2
        persistentVolumeClaim:
          claimName: kbench-pvc-2
  backoffLimit: 0
